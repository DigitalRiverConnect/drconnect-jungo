@using DigitalRiver.CloudLink.Commerce.Nimbus.SportsUs.Infrastructure.Helpers
@using DigitalRiver.CloudLink.Commerce.Nimbus.SportsUs.ViewHelpers
@using Jungo.Infrastructure.Extensions
@using Newtonsoft.Json
@model DigitalRiver.CloudLink.Commerce.Nimbus.ViewModels.Catalog.CrossSellViewModel
@if (Html.IsManaging())
{
    <div class="row">
        <h2>Up/Cross Sell</h2>
        <div class="col-sm-12">
            <div class="container">
                @{
                    var dummyIdx = 0;
                }
                @for (var i = 0; i < 3; i++)
                {
                    if (dummyIdx++ % 3 == 0) // Force items to go to a new line
                    {
                        <div class="clearfix"></div>
                    }
                    <div class="col-sm-4">
                        <img alt="Product" src="http://placehold.it/180X125&text=Product+Image" />
                        $0.00
                        <h3>Product Title</h3>
                        <p>Product Description</p>
                        <a href="#">Add to cart</a>
                    </div>
                }
            </div>
        </div>
    </div>
}
else if (Model != null && Model.Offers.Count > 0 && Model.Offers.Any(offer => offer.ProductOffersOfferViewModels != null && offer.ProductOffersOfferViewModels.Length > 0))
{
    <div class="row">
        <h2>@Model.Title</h2>
        <div class="col-sm-12">
            <div class="container">
                @{
                    var idx = 0;
                    var reachedMax = false;
                }

                @foreach (var offer in Model.Offers.Where(offer => offer.ProductOffersOfferViewModels != null && offer.ProductOffersOfferViewModels.Length > 0))
                {
                    foreach (var productOffer in offer.ProductOffersOfferViewModels)
                    {
                        if (idx++%3 == 0) // Force items to go to a new line
                        {
                            <div class="clearfix"></div>
                        }
                        if (idx > Model.MaxNumberOfProducts)
                        {
                            reachedMax = true;
                            break;
                        }
                        <div class="col-sm-4">
                                                        @{
                        var displayProduct = productOffer.Product;
                        var preorderEnabled = displayProduct.CustomAttributes.ValueByName("preorderEnabled", false);
                        var imgurl = VHCSS.GetImageFromAttribute(productOffer.Product, "productImage2", productOffer.Product.ThumbnailImage);
                                                        } 
                            <a href="@productOffer.ProductLink">
                                <img alt="@displayProduct.DisplayName" src="@imgurl" />
                                <p>@displayProduct.Name</p>
                            </a>
                            @if (productOffer.Pricing.TotalDiscountWithQuantity.Value > 0)
                            {
                                <span>@Res.Product_PriceNowColon&#160;@productOffer.Pricing.FormattedSalePriceWithQuantity</span>
                                <span>@Res.Product_PriceWasColon&#160;<del>@productOffer.Pricing.FormattedListPriceWithQuantity</del></span>
                            }
                            else
                            {
                                <span>@productOffer.Pricing.FormattedSalePriceWithQuantity</span>
                            }
                            @if (!string.IsNullOrWhiteSpace(displayProduct.ShortDescription))
                            {
                                <h3>@displayProduct.ShortDescription</h3>
                            }
                            @if (!string.IsNullOrWhiteSpace(displayProduct.LongDescription))
                            {
                                <p>@Html.Raw(displayProduct.LongDescription)</p>
                            }
                            @if (!preorderEnabled && !displayProduct.InventoryStatus.ProductIsInStock && !displayProduct.InventoryStatus.ProductIsAllowsBackorders)
                            {
                                <p>@Res.Product_OutOfStock</p>
                            }
                            else
                            {
                                var addProductModel = JsonConvert.SerializeObject(new { ProductId = productOffer.Product.Id, Quantity = 1, OfferId = offer.Id });
                                <a class="btn btn-link" href="@productOffer.AddToCartLink">@Res.Product_AddToCart</a>
                            }
                        </div>
                    }
                    if (reachedMax)
                    {
                        break;
                    }
                }
            </div>
        </div>
    </div>
}
